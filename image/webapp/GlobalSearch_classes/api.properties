# Attension: This property file is deprecated
# Information retrieval supports the old metaGlossaryAPI
# When you use functionality provided by MyInfoAssist 1.0 it could be that you here must adapt some properties

# metaGlossary: REST API configuration file
#
# Copyright (c) 1983-2023 Rocket Software, Inc. or its affiliates. All Rights Reserved.
#
# Version 10.01.001
#
# this property file is needed to support the old metaGlossary API

# NOTE: Info Retrieval provides backward compatibility to the metaGlossary REST API. 
# It, therefore, contains settings that take effect only if a client (e.g., MyInfoAssist 1.0) 
# requests data using the query format of that API. 
# Info Retrieval stores the settings that apply to REST API functionality in the api.properties file. 
# The settings in the api.properties file have no effect on requests from newer clients (e.g., MyInfoAssist 2.0).

#Query settings
#Maximum number of items that can be returned by a query
#Specifying 0 removes the restriction
query.maxHits=50
#Specifies if queries should include the subcontexts of the selected context
#(Applies only when querying the terms of a context [http://... /{Context}/Terms])
#true: Include the terms of the subcontexts of the selected context
#false: Display only the terms of the selected context
query.includeSubContexts=true
#Specify the types of relationships between terms and contexts that should be queried
#(Applies only when querying the terms of a context [http://... /{Context}/Terms])
#OWNED: Terms that are owned by the context (link direction from term to context)
#REF: Terms that are viewed by the context (link direction from context to term)
#ALL: Terms that are owned or viewed by the context (link direction both from term to context and from context to term)
query.context.RefType=ALL
#Display the IDs of users who can approve business term changes in the Approvers field on the Business Term dialog
#true: The IDs of the users are listed who can approve changes to the current term
#false: The roles are listed that provide approver rights for the current term
quey.expandRoles=true
#Specify the attributes of glossaries that should be included in the query result (separated by comma)
query.glossary.fields=id,name,DEFINITION,href,details
#Specify the attributes of contexts that should be included in the query result (separated by comma)
query.context.fields=id,name,DEFINITION,href,details
#Specify the attributes of business terms that should be included in the query result (separated by comma)
query.term.fields=id,name,PS_TEXT_ATTRIBUTE_TEST,DEFINITION,href,details,RBG/DESCRIPTION,LastApprovedBy,LastApprovedOn,Approvers,Acronym,Status,RBG/REFERENCES,RBG/SYNONYM-FOR,RBG/RELATES-TO,RBG/REFERS-TO,RBG/CALCULATED-FROM,RBG/SPECIALIZES,RBG/BELONGS-TO-CONTEXT
#Creates a hyperlink to the metaGlossary user interface for the glossaries, contexts, and terms in the query result
mg.ui.URL=http://localhost:8080/rochade

#Content type negotiation settings
#List of supported content types
#XSL file for transforming the query result to HTML 
content.text/html=/toHtml.xsl
#XSL file for transforming the query result to plain text 
content.text/plain=/toText.xsl
content.application/x-www-form-urlencoded=/toHtml.xsl

#Default content type for list queries
preferredContentType.list=application/xml
#Default content type for single-resource queries
preferredContentType.singleResource=text/html
#Default content type for single-attribute queries
preferredContentType.singleAttribute=text/plain

#Enable similarity search for special characters (German umlauts [����], etc.)
#The character mapping must be specified in the similarity.properties file
#Note: This function is available only when using Rochade Server Version 7.50 or later
search.includeSpecialCharacter=false