<?xml version="1.0" encoding="UTF-8"?>
<!--  * Copyright (c) 1983-2023 Rocket Software, Inc. or its affiliates. All Rights Reserved. -->
<xsl:stylesheet 
	version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:exslt="http://exslt.org/common"
	xmlns:msxsl="urn:schemas-microsoft-com:xslt"
	exclude-result-prefixes="exslt msxsl"
	extension-element-prefixes="exslt msxsl">
	
	<!--Identity template copies content forward -->
	<xsl:template match="@*|node()">
		<xsl:copy>
			<xsl:apply-templates select="@*|node()"/>
		</xsl:copy>
	</xsl:template>
	
	<!-- special processing of highlighting node generated by  -->
	<xsl:template match="/response/lst[@name='highlighting']/lst/arr/str/text()" >
		<xsl:choose>
			<!-- EDI-16710 the IE embedded into MIA (but the real IE browser has not such an issue) fails to process (it really ignores them during the xsl processing) the whitespaces when the whitespaces are the only characters between two html tags like the <highligh_em> tags used to decorate the matching words with highlighting -->
			<xsl:when test="string-length(.)>0 and normalize-space(.)=''">
				<xsl:call-template name="replace-string">
					<xsl:with-param name="text" select="." />
					<xsl:with-param name="replace" select="' '" />
					<xsl:with-param name="with" select="'&#160;'" />
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="." />
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	
	<!-- string:replace function isn't available for XSLT 1.0.
    template for replacement in string you can use as a substitute for the function -->
	<xsl:template name="replace-string">
		<xsl:param name="text" />
		<xsl:param name="replace" />
		<xsl:param name="with" />
		
		<xsl:choose>
			<xsl:when test="contains($text,$replace)">
				<xsl:value-of select="substring-before($text,$replace)" />
				<xsl:value-of select="$with" />
				<xsl:call-template name="replace-string">
					<xsl:with-param name="text" select="substring-after($text,$replace)" />
					<xsl:with-param name="replace" select="$replace" />
					<xsl:with-param name="with" select="$with" />
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$text" disable-output-escaping="yes"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>