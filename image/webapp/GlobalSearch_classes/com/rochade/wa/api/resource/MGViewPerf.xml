<RocService stylesheet="com.rochade.wa.api.ML.java" 
 whatdefault="id" what="{$what}">
 <!--   <connection
        type="{$connectionType}"
        physicalDefinitions    ="startupSolr2"
        applicationDefinitions = "applicationsSolr_rir2"
        id="c1"/> The parameter what is used to define what information is of interest. Each keyword specified in what represents a column in the output ResultSet. -->
  
  <!-- <connection
         type="{$connectionType}"
         physicalDefinitions    ="{$pD}"
         applicationDefinitions = "{$aD}"
         id="c1"/>     default is PooledConnection type="PooledConnection" type="SimpleConnection" -->
         
      <connection
         type="{$connectionType}"
         physicalDefinitions    ="{$pD}"
         applicationDefinitions = "{$aD}"
         id="c1"/>
         
  <categories>
      <patterns>
     
      <pattern id="p1">
        <SDCAC xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://schema.asg.com/rochade/query/Sdcac-1.0.xsd">
          <CONDITION>
          <OR>
            <AND>    
              <OR>                           
                <rule forall="searchName">
                  <param name="str" value="@param"  rule="com.rochade.wa.api.rule.UnfoldBooleanExpr" encode="sdcac"/>
                  <param name="lang" value="@lang" rule="com.rochade.wa.api.rule.UnfoldBooleanExpr" mode="any"/>
                  <XNAME text="XNAME {$lang} *  ~/ {$str}" />
                </rule>   
                  <rule forall="searchName2">
                  <param name="str" value="@param"  rule="com.rochade.wa.api.rule.UnfoldBooleanExpr" encode="sdcac"/>
                  <param name="lang" value="@lang" rule="com.rochade.wa.api.rule.UnfoldBooleanExpr" mode="any"/>
                  <XNAME text="(NOT (XNAME {$lang} * ~/ {$str}) AND (XNAME {$lang} * ~/ @*{$str}@*))" />
               </rule> 
                <rule forall="TA">
                    <param name="RefAttr" value="@refAttr" mode="@mode"/> <!-- example: RBG/CXT-REFERENCE -->
                    <param name="RefType" value="@refType"/> <!-- example: RBG/CONTEXT -->
                    <!-- wildcard="false" do not escape -->
                     <param name="lang" value="@searchLang"  wildcard="false" rule="com.rochade.wa.api.rule.UnfoldBooleanExpr" encode="sdcac" mode="langSuffix" allowEmpty="true" /> <!-- mode="@param2" -->
                
                    <TA text="TA {$RefType}{$lang} ~/ {$RefAttr}"/> 
                </rule>  
                 <rule forall="TA2">
                    <param name="RefAttr" value="@refAttr" mode="@mode"/> <!-- example: RBG/CXT-REFERENCE -->
                    <param name="RefType" value="@refType"/> <!-- example: RBG/CONTEXT -->
                    <!-- wildcard="false" do not escape -->
                     <param name="lang" value="@searchLang"  wildcard="false" rule="com.rochade.wa.api.rule.UnfoldBooleanExpr" encode="sdcac" mode="langSuffix" allowEmpty="true" /> <!-- mode="@param2" -->
                
                    <TA text="NOT (TA {$RefType}{$lang} ~/ {$RefAttr}) AND TA {$RefType}{$lang} ~/ @*{$RefAttr}@*"/> 
                </rule>  
                
                <rule forall="//category[@id='{$actCategory}']/NA">
                <param name="RefAttr" value="@param1" /> <!-- example: RBG/HAS-BUSINESS-TERM -->
                <param name="RefType" value="@param2" /> <!-- example: RBG/GLOSSARY -->
                <param name="ItemNameOfType" value="@param3" rule="com.rochade.wa.api.rule.UnfoldBooleanExpr"/> <!-- example: Finance -->
                <NA text="(NA {$RefAttr} &lt;- TYPE {$RefType}  NAME  ~/ @*{$ItemNameOfType}@* )"/> 
              </rule> 
              </OR>
                        
              <rule forall="//category[@id='{$actCategory}']/super">           
                <param name="type" value="@param" /> 
                <SUPER text="SUPER = {$type}" /> 
              </rule>                                         
            </AND>
            
             <!-- enable multilange (ml)-->
           
           <rule forall="LA">
                <param name="RefAttr" value="@param1" /> <!-- example: RBG/CXT-REFERENCE -->
                <param name="RefType" value="@param2" /> <!-- example: RBG/CONTEXT -->
                <param name="ItemNameOfType" value="@param3" rule="com.rochade.wa.api.rule.UnfoldBooleanExpr"/> <!-- example: Financial@ Plan@ Admin -->
                <LA text="LA {$RefAttr} -&gt; TYPE {$RefType}  NAME ~/ {$ItemNameOfType}"/> 
             </rule>
           
             <rule forall="LA2">
                <param name="RefAttr" value="@param1" /> <!-- example: RBG/CXT-REFERENCE -->
                <param name="RefType" value="@param2" /> <!-- example: RBG/CONTEXT -->
                <param name="ItemNameOfType" value="@param3" rule="com.rochade.wa.api.rule.UnfoldBooleanExpr"/> <!-- example: Financial@ Plan@ Admin -->
                <LA text="(NOT (LA {$RefAttr} -&gt; TYPE {$RefType}  NAME ~/ {$ItemNameOfType}) AND LA {$RefAttr} -&gt; TYPE {$RefType}  NAME ~/ @*{$ItemNameOfType}@* )"/> 
             </rule>
           </OR>   
          </CONDITION>
        </SDCAC>
      </pattern>
    </patterns>
    
   <category id="ListItemsOfType" name="ListItemsOfType" patternRef="p1" whatMin="id, name">
      <context id="c1" restrictedView="true" />
      <super param="{$Type}"/>
    </category>
   
    <category id="ListItemsOfType2" name="ListItemsOfType" patternRef="p1" whatMin="id, name, DEFINITION">
      <context id="c1" />
      <super param="{$Type}"/>
    </category>
    
     <category id="ListItemsOfType3" name="ListItemsOfType" patternRef="p1" whatMin="id, name, DEFINITION, DWR_DESCRIPTION">
      <context id="c1" />
      <super param="{$Type}"/>
    </category>
    <!-- what="*Text, level, id, scopeId,   no, absPath, attribute, DEFINITION, name, type, RBG/REFERENCES, DESCRIPTION, RBG/DESCRIPTION, RBG/STATUS, RBG/REFERENCES,RBG/SYNONYM-FOR,RBG/RELATES-TO,RBG/REFERS-TO,RBG/CALCULATED-FROM,RBG/SPECIALIZES,RBG/BELONGS-TO-CONTEXT" -->
     <category id="ListTermDetails" name="List Business Terms with Details"
         stylesheet="com/rochade/wa/api/resource/stylesheets/int_abspathV2.xsl, 
         com/rochade/wa/api/resource/stylesheets/int_rsmGMDetailsV2.xsl, com.rochade.wa.api.ML.java, com/rochade/wa/api/resource/stylesheets/int_cleanML.xsl, com/rochade/wa/api/resource/stylesheets/int_to_csv.xsl">
         <category id="ListTermDetails1"
       whatMin="id, name, scopeId, DEFINITION,RBG/DESCRIPTION, RBG/DESIGNATION, RBG/REFERENCES, RBG/SYNONYM-FOR"
       whatStylesheet="level, scopeAttribute, absPath, languages, type, attribute, RBG/DESIGNATION, RBG/REFERENCES">
        <context id="c1" />
        <report
      name=""
      version=""
      timestamp="06/18/2012 14:56:36"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:noNamespaceSchemaLocation="http://www.rochade.com/queries/mpath.xsd">
          <!-- seeditem id="{$Glossary}">TYPE = RBG/GLOSSARY</seeditem-->
          <!-- seeditem query="(XNAME * *  ~/ {$BT}) AND ( TYPE = RBG/BUSINESS-TERM )"></seeditem-->
          <seeditem id="{$Term}"></seeditem>
          <type id="_0" name="RBG/BUSINESS-TERM" isstart="true" includeSubTypes="true">
            <segment dir="to" type="_1" name="*">
              <attribute include="RBG/REFERENCES"/>
            </segment>
            <segment dir="to" type="_2" name="RBG/DESIGNATION">
              <sdcacFilter></sdcacFilter>
            </segment>
            <!--  segment dir="from" type="_3" name="EIM_META_NOTE">
            </segment-->
          </type>
          <type id="_1" name="*">
          </type>
          <type id="_2" name="RBG/DESIGNATION" includeSubTypes="true">
          </type>
        </report>
      </category>
    </category>

	<!-- what="*Text, level, id, scopeId,   no, absPath, attribute, DEFINITION, name, type, RBG/REFERENCES, DESCRIPTION, RBG/DESCRIPTION, RBG/STATUS, RBG/REFERENCES,RBG/SYNONYM-FOR,RBG/RELATES-TO,RBG/REFERS-TO,RBG/CALCULATED-FROM,RBG/SPECIALIZES,RBG/BELONGS-TO-CONTEXT" -->
     <category id="ListTermDetailsJson" name="List Business Terms with Details"
         stylesheet="com/rochade/wa/api/resource/stylesheets/int_abspathV2.xsl, 
         com/rochade/wa/api/resource/stylesheets/int_rsmGMDetailsV2.xsl, com.rochade.wa.api.ML.java, com/rochade/wa/api/resource/stylesheets/int_cleanML.xsl, com/rochade/wa/api/resource/stylesheets/int_to_json.xsl">
         <category id="ListTermDetails1"
       whatMin="id, name, scopeId, DEFINITION,RBG/DESCRIPTION, RBG/DESIGNATION, RBG/REFERENCES, RBG/SYNONYM-FOR"
       whatStylesheet="level, scopeAttribute, absPath, languages, type, attribute, RBG/DESIGNATION, RBG/REFERENCES">
        <context id="c1" />
        <report
      name=""
      version=""
      timestamp="06/18/2012 14:56:36"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:noNamespaceSchemaLocation="http://www.rochade.com/queries/mpath.xsd">
          <!-- seeditem id="{$Glossary}">TYPE = RBG/GLOSSARY</seeditem-->
          <!-- seeditem query="(XNAME * *  ~/ {$BT}) AND ( TYPE = RBG/BUSINESS-TERM )"></seeditem-->
          <seeditem id="{$Term}"></seeditem>
          <type id="_0" name="RBG/BUSINESS-TERM" isstart="true" includeSubTypes="true">
            <segment dir="to" type="_1" name="*">
              <attribute include="RBG/REFERENCES"/>
            </segment>
            <segment dir="to" type="_2" name="RBG/DESIGNATION">
              <sdcacFilter></sdcacFilter>
            </segment>
            <!--  segment dir="from" type="_3" name="EIM_META_NOTE">
            </segment-->
          </type>
          <type id="_1" name="*">
          </type>
          <type id="_2" name="RBG/DESIGNATION" includeSubTypes="true">
          </type>
        </report>
      </category>
    </category>	
    
    <!-- what="*Text, level, id, scopeId,   no, absPath, attribute, DEFINITION, name, type, RBG/REFERENCES, DESCRIPTION, RBG/DESCRIPTION, RBG/STATUS, RBG/REFERENCES,RBG/SYNONYM-FOR,RBG/RELATES-TO,RBG/REFERS-TO,RBG/CALCULATED-FROM,RBG/SPECIALIZES,RBG/BELONGS-TO-CONTEXT" -->
     <category id="ListTermDetailsSolrSchema" name="List Business Terms with Details"
         stylesheet="com/rochade/wa/api/resource/stylesheets/int_abspathV2.xsl, 
         com/rochade/wa/api/resource/stylesheets/int_rsmGMDetailsV2.xsl, com.rochade.wa.api.ML.java, com/rochade/wa/api/resource/stylesheets/int_cleanML.xsl, com/rochade/wa/api/resource/stylesheets/int_to_schema.xsl">
         <category id="ListTermDetails1"
       whatMin="level, id, scopeId, scopeAttribute, absPath, languages, name, type, attribute, DEFINITION,RBG/DESCRIPTION, RBG/DESIGNATION, RBG/REFERENCES, RBG/SYNONYM-FOR"
whatStylesheet="level, scopeAttribute, absPath, languages, type, attribute, RBG/DESIGNATION, RBG/REFERENCES">
        <context id="c1" />
        <report
      name=""
      version=""
      timestamp="06/18/2012 14:56:36"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:noNamespaceSchemaLocation="http://www.rochade.com/queries/mpath.xsd">
          <!-- seeditem id="{$Glossary}">TYPE = RBG/GLOSSARY</seeditem-->
          <!-- seeditem query="(XNAME * *  ~/ {$BT}) AND ( TYPE = RBG/BUSINESS-TERM )"></seeditem-->
          <seeditem id="{$Term}"></seeditem>
          <type id="_0" name="RBG/BUSINESS-TERM" isstart="true" includeSubTypes="true">
            <segment dir="to" type="_1" name="*">
              <attribute include="RBG/REFERENCES"/>
            </segment>
            <segment dir="to" type="_2" name="RBG/DESIGNATION">
              <sdcacFilter></sdcacFilter>
            </segment>
            <!--  segment dir="from" type="_3" name="EIM_META_NOTE">
            </segment-->
          </type>
          <type id="_1" name="*">
          </type>
          <type id="_2" name="RBG/DESIGNATION" includeSubTypes="true">
          </type>
        </report>
      </category>
    </category>  
       
  </categories>
  <request>
    <!-- <maxHits>${maxHits}</maxHits> -->
    <task mand="true">${task}</task>
    <category>${category}</category>
    <searchString>${searchString}</searchString>
  </request>
</RocService>